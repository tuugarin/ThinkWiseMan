<Page
    x:Class="ThinkWiseMan.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ThinkWiseMan"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="using:Prism.Windows.Mvvm"
  
    prism:ViewModelLocator.AutoWireViewModel="true"
    Name="mainPage"
    Background="{ThemeResource BackgroundBrush}"
    mc:Ignorable="d"
     FontFamily="{StaticResource  DefaultFont}">
    <!--<StackPanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">-->
    <!--<DatePicker BorderThickness="0" BorderBrush="Transparent"  HorizontalAlignment="Left" YearVisible="False" Date="{Binding CurrentDate, Mode=TwoWay}" Margin="10,10,0,0" VerticalAlignment="Top"/>-->
    <Grid>
        <FlipView Background="{ThemeResource BackgroundBrush}" x:Name="flipView" ItemsSource="{Binding Ideas}" SelectedItem="{Binding CurrentWiseIdea, Mode=TwoWay}" HorizontalAlignment="Stretch"  Margin="0,0,0,26">
            <FlipView.ItemTemplate>
                <DataTemplate>
                    <UserControl>
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <!--VisualState to be triggered when window width is >=320 effective pixels.-->
                                            <AdaptiveTrigger MinWindowWidth="320" />
                                        </VisualState.StateTriggers>

                                        <VisualState.Setters>
                                            <Setter Target="RichTextBlockMain.Padding" Value="25,20,25,20" />
                                            <Setter Target="ParagraphContent.FontSize" Value="20" />
                                            <Setter Target="ParagraphAuthor.FontSize" Value="14" />
                                            <Setter Target="ParagraphDate.FontSize" Value="24" />

                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <!--VisualState to be triggered when window width is >=720 effective pixels.-->
                                            <AdaptiveTrigger MinWindowWidth="720" />
                                        </VisualState.StateTriggers>

                                        <VisualState.Setters>
                                            <Setter Target="RichTextBlockMain.Padding" Value="100,100,100,100" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                                <RichTextBlock x:Name="RichTextBlockMain" TextWrapping="Wrap" TextTrimming="None"  HorizontalAlignment="Center" Padding="100,100,100,100" VerticalAlignment="Center">
                                    <Paragraph x:Name="ParagraphDate" TextAlignment="Center"  FontSize="28" FontStyle="Italic" FontWeight="Bold">
                                        <Run Text="{Binding DateText}" ></Run>
                                    </Paragraph>

                                    <Paragraph x:Name="ParagraphContent" FontSize="24" FontStyle="Italic">
                                        <Run Text="{Binding Content}"></Run>
                                    </Paragraph>
                                    <Paragraph x:Name="ParagraphAuthor" TextAlignment="Right" FontStyle="Italic" FontSize="18">
                                        <Run Text="{Binding Author}"></Run>
                                    </Paragraph>
                                </RichTextBlock>
                            </ScrollViewer>
                            <!--<TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Content}" />
                        <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" Text="{Binding Author}" HorizontalAlignment="Right" />-->
                        </Grid>
                    </UserControl>
                </DataTemplate>
            </FlipView.ItemTemplate>
        </FlipView>
        <ItemsControl Margin="0,0,0,20" Background="{ThemeResource BackgroundBrush}" Foreground="{ThemeResource ForegroundBrush}" ItemsSource="{Binding Ideas}" 
                      Visibility="{Binding Ideas.Count, Converter={StaticResource PageIndicatorVisibilityConverter}}"
                      HorizontalAlignment="Center" VerticalAlignment="Bottom">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Background="{ThemeResource BackgroundBrush}" Command="{Binding DataContext.GoToSelectedWiseIdea, ElementName=mainPage, Mode=OneWay}" CommandParameter="{Binding}">
                        <Button.Template>
                            <ControlTemplate TargetType="Button" >
                                <Grid Height="8" Width="8" Margin="10,10">
                                    <Ellipse Fill="Gray" Stroke="Gray" />
                                    <Ellipse Fill="{ThemeResource ForegroundBrush}" Stroke="{ThemeResource ForegroundBrush}" Visibility="{Binding Selected, Converter={StaticResource VisibilityConverter}}"/>
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>

                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>

    <Page.BottomAppBar>

        <CommandBar FontFamily="{StaticResource DefaultFont}" DefaultLabelPosition="Bottom" Name="CommandBar" Background="{ThemeResource BackgroundBrush}" Foreground="{ThemeResource ForegroundBrush}">
            <AppBarButton   x:Uid="AppBarButtonHome" Visibility="{Binding IsVisibleHomeButton, Converter={StaticResource VisibilityConverter}}" Label="Домой"  Command="{Binding GoToHomeCommand}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE10F;"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton  x:Uid="AppBarButtonShare"  Label="Делиться" Command="{Binding ShareCommand}" ToolTipService.ToolTip="Делиться">
                <AppBarButton.Icon>
                    <FontIcon  Glyph="&#xE72D;"/>
                </AppBarButton.Icon>

            </AppBarButton>

            <AppBarButton x:Uid="AppBarButtonLike" Label="Нравится"  Command="{Binding ChangeFavorites}" >
                <AppBarButton.Icon>
                    <FontIcon Glyph="{Binding CurrentWiseIdea.IsFavorite, Mode=OneWay, Converter={StaticResource FavoritesToIconConverter}}"/>
                </AppBarButton.Icon>
            </AppBarButton>

            <AppBarButton  x:Uid="AppBarButtonFavourites" Label="Избранное"  Command="{Binding GoToFavouritesCommand}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE728;"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <CommandBar.SecondaryCommands>
                <AppBarButton  x:Uid="AppBarButtonReview" Label="Оценить" Command="{Binding GoToStoreAndReview}" ToolTipService.ToolTip="Оценить" Icon="Like"/>
                <AppBarButton  x:Uid="AppBarButtonCopy" Label="Копировать цитату" Command="{Binding CopySelectedWiseIdea}" ToolTipService.ToolTip="Копировать цитату" Icon="Copy"/>
                <AppBarButton x:Name="AppBarButtonSettingsSecondary" Label="Настройки" Icon="Setting" Command="{Binding GoToSettingsCommand}"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>

</Page>
